%   Description: Sort Surpass Spots and Surfaces using their statistical
%   properties. Does lots of other types of calculations and analyses.
%
%   <CustomTools>
%       <Menu>
%           <Submenu name="Surfaces Functions">
%               <Item name="Sortomato" icon="Matlab"
%                   tooltip="Analyze and sort Surpass objects based on their properties">
%                   <Command>MatlabXT::sortomato(%i)</Command>
%               </Item>
%           </Submenu>
%           <Submenu name="Spots Functions">
%               <Item name="Sortomato" icon="Matlab"
%                   tooltip="Analyze and sort Surpass objects based on their properties">
%                   <Command>MatlabXT::sortomato(%i)</Command>
%               </Item>
%           </Submenu>
%       </Menu>
%
%       <SurpassTab>
%           <SurpassComponent name="bpSurfaces">
%               <Item name="Sortomato" icon="Matlab"
%                   tooltip="Analyze and sort Surpass objects based on their properties">
%                   <Command>MatlabXT::sortomato(%i)</Command>
%               </Item>
%           </SurpassComponent>
%           <SurpassComponent name="bpSpots">
%               <Item name="Sortomato" icon="Matlab"
%                   tooltip="Analyze and sort Surpass objects based on their properties">
%                   <Command>MatlabXT::sortomato(%i)</Command>
%               </Item>
%           </SurpassComponent>
%       </SurpassTab>
%   </CustomTools>
% 
%   ©2010-2014, P. Beemiller. Licensed under a Creative Commmons Attribution
%   license. See: http://creativecommons.org/licenses/by/3.0/

function varargout = sortomato(xImarisID, varargin)
    % SORTOMATO Process and sort image objects from Imaris
    %   Syntax
    %   ------
    %   hGUI = SORTOMATO(xImarisID);
    %   hGUI = SORTOMATO(xImarisID, 'Color', 'k');   
    %   
    %   Description
    %   -----------
    %   hGUI = SORTOMATO(xImarisID) connects to the Imaris instance
    %   represented by the integer application ID xImarisID and creates a
    %   Sortomato figure. The handle to the figure is returned in hGUI.
    %   
    %   hGUI = SORTOMATO(xImarisID, 'Color', 'w') creates a Sortomato
    %   figure with a white background.
    %
    %   ©2010-2014, P. Beemiller. Licensed under a Creative Commmons Attribution
    %   license. See: http://creativecommons.org/licenses/by/3.0/
    
    %% Parse the inputs.
    sortomatoParser = inputParser;
    
    addRequired(sortomatoParser, 'xImarisID', ...
        @(arg)...
        (isnumeric(arg) && rem(arg, 1) == 0) || ...
        (~isnan(str2double(arg)) && rem(str2double(arg), 1) == 0))
    
    addParamValue(sortomatoParser, 'Color', 'w', ...
        @(arg)any(strcmpi(arg, {'k', 'black', 'w', 'white'})))
    
    parse(sortomatoParser, xImarisID, varargin{:})
    
    %% Connect to the Imaris application and get the objects.
    xImarisApp = xtconnectimaris(xImarisID);
    surpassObjects = xtgetsporfaces(xImarisApp);
    
    if isempty(surpassObjects)
        return
    end % if
    
    %% Create the base figure.
    displayPos = get(0, 'MonitorPositions');
    guiWidth = 254;
    guiHeight = 161;
    guiPos = [...
        displayPos(1, 1) + displayPos(1, 3)/2 - guiWidth/2, ...
        displayPos(1, 2) + displayPos(1, 4)/2 - guiHeight/2, ...
        guiWidth, ...
        guiHeight];
    
    guiSortomato = figure(...
        'CloseRequestFcn', {@sortomatoclose}, ...
        'MenuBar', 'None', ...
        'Name', 'Sortomato', ...
        'NumberTitle', 'Off', ...
        'Position', guiPos, ...
        'Resize', 'off', ...
        'Tag', 'guiSortomato');
    
    %% Load the cdata struct from disk and set the figure and font colors.
    switch sortomatoParser.Results.Color
        
        case 'k'
            sortomatoCData = load('sortomatoK_cdata.mat');
            set(guiSortomato, 'Color', 'k')
            bColor = 'k';
            fColor = 'w';
            
        case 'w'
            sortomatoCData = load('sortomato_cdata.mat');
            set(guiSortomato, 'Color', 'w')
            bColor = 'w';
            fColor = 'k';
            
    end % switch
    
    %% Create the graph type selection panel and new graph buttons.
    % Setup the GUI bottom to top.
    panelGraphType = uibuttongroup(...
        'BackgroundColor', bColor, ...
        'BorderType', 'Line', ...
        'BorderWidth', 1, ...
        'FontSize', 12, ...
        'ForegroundColor', fColor, ...
        'HighlightColor', fColor, ...
        'Parent', guiSortomato, ...
        'Position', [10 40 174 50]./[guiWidth guiHeight guiWidth guiHeight], ...
        'Tag', 'panelGraphType', ...
        'Title', 'Graph objects', ...
        'TitlePosition', 'CenterTop');
    
    uicontrol(...
        'BackgroundColor', bColor, ...
        'FontSize', 10, ...
        'ForegroundColor', fColor, ...
        'Parent', panelGraphType, ...
        'HorizontalAlign', 'Left', ...
        'Position', [10 8 80 21], ...
        'String', 'Singlets', ...
        'Style', 'radiobutton', ...
        'Tag', 'radioSinglets', ...
        'TooltipString', 'Select to graph single objects');
        
    uicontrol(...
        'BackgroundColor', bColor, ...
        'FontSize', 10, ...
        'ForegroundColor', fColor, ...
        'Parent', panelGraphType, ...
        'HorizontalAlign', 'Left', ...
        'Position', [97 8 60 21], ...
        'String', 'Tracks', ...
        'Style', 'radiobutton', ...
        'Tag', 'radioTracks', ...
        'TooltipString', 'Select to graph tracks');
        
    % Sortomato graph
    uicontrol(...
        'BackgroundColor', bColor, ...
        'CData', sortomatoCData.Graph, ...
        'Parent', guiSortomato, ...
        'Position', [190, 49, 24, 24], ...
        'String', '', ...
        'Style', 'pushbutton', ...
        'Tag', 'pushGraph', ...
        'TooltipString', 'Graph selected object statistics');
    
    % Sortomato 3D graph
    uicontrol(...
        'BackgroundColor', bColor, ...
        'CData', sortomatoCData.Graph3, ...
        'Parent', guiSortomato, ...
        'Position', [220, 49, 24, 24], ...
        'String', '', ...
        'Style', 'pushbutton', ...
        'Tag', 'pushGraph3', ...
        'TooltipString', 'Graph selected object statistics in 3D');
    
    %% Create the stat calculation function buttons.
    % Binary stat math
    uicontrol(...
        'BackgroundColor', bColor, ...
        'CData', sortomatoCData.BinaryStatMath, ...
        'Parent', guiSortomato, ...
        'Position', [190, 85, 24, 24], ...
        'String', '', ...
        'Style', 'pushbutton', ...
        'Tag', 'pushStatMath', ...
        'TooltipString', 'Perform arithmetic using two statistics');
    
    % Stat derivatives
    uicontrol(...
        'BackgroundColor', bColor, ...
        'Callback', {@statderivatives, guiSortomato}, ...
        'CData', sortomatoCData.StatDerivatives, ...
        'Parent', guiSortomato, ...
        'Position', [220, 85, 24, 24], ...
        'String', '', ...
        'Style', 'pushbutton', ...
        'Tag', 'pushStatDerivatives', ...
        'TooltipString', 'Calculate the derivatives of track statistics', ...
        'UserData', sortomatoCData.RefreshSurpass);

    %% Create the Surpass object popup menu.
    % Label
    uicontrol(...
        'BackgroundColor', bColor, ...
        'FontSize', 12, ...
        'ForegroundColor', fColor, ...
        'HorizontalAlign', 'Left', ...
        'Parent', guiSortomato, ...
        'Position', [10 119 150 24], ...
        'String', 'Objects', ...
        'Style', 'text', ...
        'Tag', 'textObjects');
    
    % Popup
    popupObjects = uicontrol(...
        'BackgroundColor', bColor, ...
        'Callback', {@popupobjectscallback, guiSortomato}, ...
        'FontSize', 12, ...
        'ForegroundColor', [0.5 0.5 0.5], ...
        'Parent', guiSortomato, ...
        'Position', [84 123 100 24], ...
        'String', {surpassObjects.Name}, ...
        'Style', 'popupmenu', ...
        'Tag', 'popupObjects', ...
        'TooltipString', 'Select a Surpass object for plotting and sorting');
    
    % Refresh button
    uicontrol(...
        'BackgroundColor', bColor, ...
        'Callback', {@pushsurpassrefreshcallback, guiSortomato, popupObjects}, ...
        'CData', sortomatoCData.RefreshSurpass, ...
        'Parent', guiSortomato, ...
        'Position', [190, 121, 24, 24], ...
        'String', '', ...
        'Style', 'pushbutton', ...
        'Tag', 'pushSurpassRefresh', ...
        'TooltipString', 'Refresh the Surpass objects list');
        
    % Stat export
    uicontrol(...
        'BackgroundColor', bColor, ...
        'CData', sortomatoCData.ExportStats, ...
        'Parent', guiSortomato, ...
        'Position', [220, 121, 24, 24], ...
        'String', '', ...
        'Style', 'pushbutton', ...
        'Tag', 'pushExportStats', ...
        'TooltipString', 'Export selected object statistics organized by track');
    
    %% Setup the status bar.
    hStatus = statusbar(guiSortomato, '');
    hStatus.CornerGrip.setVisible(false)
    
    hStatus.ProgressBar.setForeground(java.awt.Color.black)
    hStatus.ProgressBar.setString(' ')
    hStatus.ProgressBar.setStringPainted(true)

    %% Store the XT and Surpass objects.
    setappdata(guiSortomato, 'xImarisApp', xImarisApp)
    setappdata(popupObjects, 'surpassObjects', surpassObjects)
    
    %% Supress the constant data warning for contourf.
    warning('off', 'MATLAB:contourf:ConstantData')
    
    %% If the function call requested the figure handle, return it.
    if nargout == 1
        varargout{1} = guiSortomato;
    end % if
end % sortomato


function sortomatoclose(guiSortomato, eventData)
    % SORTOMATOCLOSE Close request function for the Sortomato GUI
    %
    %
    
    %% Delete any graph's launched from the base.
    graphChildren = getappdata(guiSortomato, 'graphChildren');

    for c = 1:length(graphChildren)
        guiContourSettings = getappdata(graphChildren(c), 'guiContourSettings');
        if ishandle(guiContourSettings)
            delete(guiContourSettings)
        end % if

        figLimits = getappdata(graphChildren(c), 'figLimits');
        if ~isempty(figLimits)
            delete(figLimits)
        end % if

        figView = getappdata(graphChildren(c), 'figView');
        if ~isempty(figView)
            delete(figView)
        end % if

        delete(graphChildren(c))
    end % for c
    
    %% Delete any sub-GUIs launched from the base.
    guiChildren = getappdata(guiSortomato, 'guiChildren');
    
    if ~isempty(guiChildren)
        delete(guiChildren)
    end % if
    
    %% Restore the constant data warning for contourf.
    warning('on', 'MATLAB:contourf:ConstantData')
    
    %% Close the Sortomato figure.
    delete(guiSortomato)
end % sortomatoclose